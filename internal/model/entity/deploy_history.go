// =================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// =================================================================================

package entity

import (
	"github.com/gogf/gf/v2/os/gtime"
)

// DeployHistory is the golang structure for table deploy_history.
type DeployHistory struct {
	Id            int         `json:"Id"            description:""`                       //
	WorkflowName  string      `json:"WorkflowName"  description:"workflow的name"`          // workflow的name
	GitlabUrl     string      `json:"GitlabUrl"     description:"gitlab的地址"`              // gitlab的地址
	ServiceName   string      `json:"ServiceName"   description:"服务名"`                    // 服务名
	ServiceId     string      `json:"ServiceId"     description:"服务ID"`                   // 服务ID
	K8SCluster    string      `json:"K8SCluster"    description:"所属K8S环境"`                // 所属K8S环境
	Env           string      `json:"Env"           description:"所属环境,qa/dev/prod/ops类似"` // 所属环境,qa/dev/prod/ops类似
	Branch        string      `json:"Branch"        description:"构建时的分支名"`                // 构建时的分支名
	Image         string      `json:"Image"         description:"构建成功的镜像地址"`              // 构建成功的镜像地址
	DeployTime    *gtime.Time `json:"DeployTime"    description:"提交构建的时间"`                // 提交构建的时间
	CommitId      string      `json:"CommitId"      description:"gitlab提交的ID"`            // gitlab提交的ID
	CommitMessage string      `json:"CommitMessage" description:"gitlab构建时候的提交信息"`        // gitlab构建时候的提交信息
	CommitEmail   string      `json:"CommitEmail"   description:"构建提交的email"`             // 构建提交的email
	CommitTime    *gtime.Time `json:"CommitTime"    description:"构建的时间"`                  // 构建的时间
	Status        string      `json:"Status"        description:"构建的状态"`                  // 构建的状态
	Operator      string      `json:"Operator"      description:"构建人"`                    // 构建人
	Type          string      `json:"Type"          description:"历史类型,是CI还是CD"`           // 历史类型,是CI还是CD
	Result        string      `json:"Result"        description:"构建状态,0代表成功,其他任何数值代表失败"`  // 构建状态,0代表成功,其他任何数值代表失败
}
