// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// PrometheusReportDao is the data access object for table prometheus_report.
type PrometheusReportDao struct {
	table   string                  // table is the underlying table name of the DAO.
	group   string                  // group is the database configuration group name of current DAO.
	columns PrometheusReportColumns // columns contains all the column names of Table for convenient usage.
}

// PrometheusReportColumns defines and stores column names for table prometheus_report.
type PrometheusReportColumns struct {
	Id          string //
	Alertname   string // 告警类型
	K8SCluster  string // 集群名
	Env         string // 环境
	Level       string // 告警等级
	StartTime   string // 开始时间
	EndTime     string // 结束时间
	Description string // 描述
	Summary     string // 概述
	Labels      string // 标签
	IsResolved  string // 是否解决
}

// prometheusReportColumns holds the columns for table prometheus_report.
var prometheusReportColumns = PrometheusReportColumns{
	Id:          "id",
	Alertname:   "alertname",
	K8SCluster:  "k8s_cluster",
	Env:         "env",
	Level:       "level",
	StartTime:   "start_time",
	EndTime:     "end_time",
	Description: "description",
	Summary:     "summary",
	Labels:      "labels",
	IsResolved:  "is_resolved",
}

// NewPrometheusReportDao creates and returns a new DAO object for table data access.
func NewPrometheusReportDao() *PrometheusReportDao {
	return &PrometheusReportDao{
		group:   "default",
		table:   "prometheus_report",
		columns: prometheusReportColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *PrometheusReportDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *PrometheusReportDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *PrometheusReportDao) Columns() PrometheusReportColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *PrometheusReportDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *PrometheusReportDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *PrometheusReportDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
