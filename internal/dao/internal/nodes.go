// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// NodesDao is the data access object for table nodes.
type NodesDao struct {
	table   string       // table is the underlying table name of the DAO.
	group   string       // group is the database configuration group name of current DAO.
	columns NodesColumns // columns contains all the column names of Table for convenient usage.
}

// NodesColumns defines and stores column names for table nodes.
type NodesColumns struct {
	Id         string // 索引
	Name       string // 主机名
	Address    string // 主机地址
	Port       string // 端口
	Username   string // 根用户名
	Password   string // 根密码
	Os         string // 操作系统
	Version    string // 操作系统版本
	MemorySize string // 内存大小 单位MB
	DiskSize   string // 磁盘大小 单位MB
	CpuSize    string // CPU大小 单位核
	Department string // 部门
	Business   string // 业务线
}

// nodesColumns holds the columns for table nodes.
var nodesColumns = NodesColumns{
	Id:         "id",
	Name:       "name",
	Address:    "address",
	Port:       "port",
	Username:   "username",
	Password:   "password",
	Os:         "os",
	Version:    "version",
	MemorySize: "memory_size",
	DiskSize:   "disk_size",
	CpuSize:    "cpu_size",
	Department: "department",
	Business:   "business",
}

// NewNodesDao creates and returns a new DAO object for table data access.
func NewNodesDao() *NodesDao {
	return &NodesDao{
		group:   "default",
		table:   "nodes",
		columns: nodesColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *NodesDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *NodesDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *NodesDao) Columns() NodesColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *NodesDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *NodesDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *NodesDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
